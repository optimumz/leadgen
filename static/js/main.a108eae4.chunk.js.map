{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Hiring","tile_style","margin","border","opacity","id","style","display","flexDirection","justifyContent","alignItems","flexWrap","backgroundColor","data","hiring","map","d","dangerouslySetInnerHTML","__html","html","Looking","looking","App","props","state","buttonId","setButton","bind","this","setState","subheader_styles","fontStyle","color","button_styles","padding","borderRadius","fontWeight","borderBottom","position","className","onClick","value","type","ref","borderTop","href","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a108eae4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport data from './LI_posts.json'\n\nfunction Hiring(){\n    const hiring_container_styles = {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        backgroundColor: \"#0E2439\"\n    }\n    const tile_style = {\n        margin: \"20px\",\n        border: \"solid light-gray 1px\",\n        opacity: \"0.9\"\n    }\n    return (\n        <div id={\"hiring\"} style={hiring_container_styles}>\n            {data.hiring.map(d => (\n                <div style={tile_style} dangerouslySetInnerHTML={{__html: d.html}}/>\n            ))}\n        </div>\n    )\n}\nfunction Looking(){\n    const looking_container_styles = {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        backgroundColor: \"#0E2439\"\n    }\n    const tile_style = {\n        margin: \"20px\",\n        border: \"solid light-gray 1px\"\n    }\n    return (\n        <div id={\"looking\"} style={looking_container_styles}>\n            {data.looking.map(d => (\n                <div style={tile_style} dangerouslySetInnerHTML={{__html: d.html}}/>\n            ))}\n        </div>\n    )\n}\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            buttonId: null\n        }\n        this.setButton = this.setButton.bind(this);\n    }\n    setButton(id){\n        this.setState({buttonId: id});\n    }\n    render() {\n        const header_container_styles = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            borderBottom: \".15em solid #1F364D\",\n            padding: \".5em\",\n            backgroundColor: \"#1F364D\",\n            color: \"#9CB3C9\",\n            position: \"\"\n        }\n        const footer_container_styles = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            borderTop: \".15em solid #1F364D\",\n            padding: \".5em\",\n            backgroundColor: \"#1F364D\",\n            color: \"#9CB3C9\"\n        }\n        const header_styles = {\n            padding: \".5em\"\n        }\n        const subheader_styles = {\n            fontStyle: \"italic\",\n            color: \"#9CB3C9\"\n        }\n        const button_styles = {\n            padding: \".5em\",\n            margin: \"10px\",\n            backgroundColor: \"#4899EB\",\n            border: \"0\",\n            borderRadius: \"5px\",\n            color: \"white\",\n            fontWeight: \"bold\"\n        }\n        const banner_styles = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            borderTop: \".15em solid gray\",\n            borderBottom: \".15em solid gray\",\n            padding: \"1em\",\n            backgroundColor: \"#1F364D\",\n            color: \"#9CB3C9\",\n            fontWeight: \"bold\"\n        }\n        return (\n            <div>\n                <div style={header_container_styles}>\n                    <h1 style={header_styles}>{\"LeadGen.io (beta release)\"}</h1>\n                    <h4 style={subheader_styles}>The World's First Lead Generation Marketplace</h4>\n                    <h6 style={subheader_styles}>New leads every day</h6>\n                    <div>\n                        <input style={button_styles} className={this.state.buttonId === 1? \"button1 orange\" :\n                            \"button1\"} onClick={() => this.setButton(1)} value=\"I'm a Job Seeker looking for roles\"\n                               type=\"button\" ref=\"button\" />\n                        <input style={button_styles} className={this.state.buttonId === 2? \"button2 orange\" :\n                            \"button2\"} onClick={() => this.setButton(2)}  value=\"I'm a Recruiter looking for leads\"\n                               ref=\"button1\" type=\"button\" />\n                    </div>\n                </div>\n\n                <div style={banner_styles}>\n                    Our team wants to talk to users like you about your job search experiences.\n                    <a href={\"https://forms.gle/VpM8AYrdbUgocqCh8\"}>Sign up here</a>\n                </div>\n\n                {this.state.buttonId === 1 && <Hiring/>}\n                {this.state.buttonId === 2 && <Looking/>}\n                {this.state.buttonId !== 1  && this.state.buttonId !== 2 && <Hiring/>}\n\n                <div>\n                    <div style={footer_container_styles}>\n                        <h7 style={subheader_styles}>Like the website? <a href=\"https://www.buymeacoffee.com/hideshidara\"> Support us by buying us coffee </a></h7>\n                        <h7 style={subheader_styles}> Want a 1-on-1 consultation with a software engineer? <a href=\"https://calendly.com/hshidara/15min\"> We got you </a></h7>\n                        <h7 style={subheader_styles}> <a href=\"mailto:optimumz.web@gmail.com\">Give us feedback</a></h7>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}